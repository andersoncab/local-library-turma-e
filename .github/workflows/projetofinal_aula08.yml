
name: Aula 08 - Projeto Final

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
  workflow_dispatch:
  
jobs:
  
  job1:
    name: Build e test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test --if-present
      
  job2:
    name: Linter
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_CSS: true
          VALIDATE_MARKDOWN: true
          JAVASCRIPT_DEFAULT_STYLE: prettier
  
  job3:
    name: Analise SAST SonarCloud
    runs-on: ubuntu-latest
    
    needs: [job1, job2]
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    
  
  job4:
    name: Deploy homologacao
    runs-on: ubuntu-latest
    env:      
      DB_URI: ${{ secrets.MONGODB_URI }}
      NODE_ENV: homologacao
    
    environment:
      name: 'homologacao'
    
    needs: [job3]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Login Heroku
        uses: akhileshns/heroku-deploy@v3.10.9 # This is the action
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: cicd-anderson-homol
          heroku_email: andersoncfit@gmail.com
          justlogin: true
          
      - name: Set Heroku remote existing Git repository
        run: heroku git:remote -a cicd-anderson-homol
        
      - name: Set env variables
        run: |
          heroku config:set NODE_ENV=${{ env.NODE_ENV }}
          heroku config:set MONGODB_URI=${{ env.DB_URI }}
      
      - name: Deploy your application to homologacao environment
        run: git push heroku main
        
  job5:
    name: Deploy producao
    runs-on: ubuntu-latest
    env:      
      DB_URI: ${{ secrets.MONGODB_URI }}
      NODE_ENV: producao
    
    environment:
      name: 'producao'
      
    needs: [job4]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Login Heroku
        uses: akhileshns/heroku-deploy@v3.10.9 # This is the action
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: cicd-anderson-prod
          heroku_email: andersoncfit@gmail.com
          justlogin: true
          
        
      - name: Set Heroku remote existing Git repository
        run: heroku git:remote -a cicd-anderson-prod
        
      - name: Set env variables
        run: |
          heroku config:set NODE_ENV=${{ env.NODE_ENV }}
          heroku config:set MONGODB_URI=${{ env.DB_URI }}
      
      - name: Deploy your application to production environment
        run: git push heroku main
        
    
